<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
 
	<batch:job id="importFileJob" job-repository="jobRepository">
		<batch:step id="importFileStep">
			<batch:tasklet>
				<batch:chunk reader="employeeImporterReader" processor="employeeImporterProcessor" writer="employeeImporterWriter"
					commit-interval="5" skip-limit="2">
					<batch:skippable-exception-classes>
						<batch:include class="org.springframework.batch.item.file.FlatFileParseException" />
						<batch:include class="java.lang.IllegalArgumentException" />
					</batch:skippable-exception-classes>
					<batch:listeners>
						<batch:listener ref="customSkipListener" />
					</batch:listeners>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:listeners>
			<batch:listener ref="customJobListener" />
		</batch:listeners>
	</batch:job>
	
	<bean id="customSkipListener"
		class="ar.com.telecom.shiva.batch.springbatch.listener.CustomSkipListener" />
	<bean id="customJobListener"
		class="ar.com.telecom.shiva.batch.springbatch.listener.CustomJobListener" />		

	<!-- Reader, destacar que se salta la lÃ­nea de las cabeceras -->

	<bean id="employeeImporterReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${file}" />
		<property name="encoding" value="utf8" />
		<property name="lineMapper" ref="employeeImporterMapper" />
		<property name="linesToSkip" value="1" />
		<property name="recordSeparatorPolicy" ref="skipBlankLineRecordSeparatorPolicy" />
	</bean>

	<bean id="skipBlankLineRecordSeparatorPolicy"
		class="ar.com.telecom.shiva.batch.springbatch.separator.SkipBlankLinePolicy"/>
		 
	<!-- Mapeo de cada fila del fichero -->
	<bean id="employeeImporterMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="fieldSetMapper" ref="employeeAutoFieldSetMapper" />
		<property name="lineTokenizer">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
				<property name="names"
					value="name, lastName, age" />
			</bean>
		</property>
	</bean>
 
	<!-- Mapeo de campos y objeto a mapear -->
	<bean id="employeeAutoFieldSetMapper"
		class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
		<property name="prototypeBeanName" value="employeeBean" />
	</bean>
	<bean id="employeeBean" class="ar.com.telecom.shiva.batch.springbatch.model.Employee" scope="prototype" />
 
	<!-- Writer y processor -->

	<bean id="employeeImporterWriter"
		class="ar.com.telecom.shiva.batch.springbatch.writer.EmployeeImporterWriter" />
		
	<bean id="employeeImporterProcessor"
		class="ar.com.telecom.shiva.batch.springbatch.processor.EmployeeImporterProcessor" />

</beans>